[0;33m--- Warning: GDB cannot open serial ports accessed as COMx[0m
[0;33m--- Using \\.\COM8 instead...[0m
[0;33m--- esp-idf-monitor 1.5.0 on \\.\COM8 115200[0m
[0;33m--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H[0m
[1;31m--- esp_idf_monitor (1.5.0) - ESP-IDF Monitor tool
--- based on miniterm from pySerial
---
--- Ctrl+]   Exit program
--- Ctrl+T   Menu escape key, followed by:
--- Menu keys:
---    Ctrl+T         Send the menu character itself to remote
---    Ctrl+]         Send the exit character itself to remote
---    Ctrl+R         Reset target board via RTS line
---    Ctrl+F         Build & flash project
---    Ctrl+A (or A)  Build & flash app only
---    Ctrl+Y         Toggle output display
---    Ctrl+L         Toggle saving output into file
---    Ctrl+I (or I)  Toggle printing timestamps
---    Ctrl+P         Reset target into bootloader via the DTR/RTS lines
---    Ctrl+X (or X)  Exit program[0m
[0;33m--- To exit from IDF monitor please use "Ctrl+]". Alternatively, you can use Ctrl+T Ctrl+X to exit.[0m
[0m
Traceback (most recent call last):
  File "c:\Espressif\frameworks\esp-idf-v5.3.1\tools/idf_monitor.py", line 11, in <module>
    sys.exit(subprocess.run([sys.executable, '-m', 'esp_idf_monitor'] + sys.argv[1:]).returncode)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\USER\AppData\Local\Programs\Python\Python312\Lib\subprocess.py", line 550, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\USER\AppData\Local\Programs\Python\Python312\Lib\subprocess.py", line 1201, in communicate
    self.wait()
  File "C:\Users\USER\AppData\Local\Programs\Python\Python312\Lib\subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\USER\AppData\Local\Programs\Python\Python312\Lib\subprocess.py", line 1590, in _wait
    result = _winapi.WaitForSingleObject(self._handle,
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
